` [^_]
<[^_]
|[^_]
 [^_]
,[^_]
?[^_]
//=============================================================================
//    
//    {   
//    }   
//-----------------------------------------------------------------------------
/////////////////////////////////////////////////////////////////////////////
([^_]
[[^_]
{}()':
$[^_]
\[^_]
		    {
		    }
		    })
		   {
		   }
			})
				{
				}
					
					{
					}
						
						{
						}
							
							{
							}
-+ #0
[,;^0
0[^_]
0123456789abcdef
0123456789ABCDEF
&#039;
,%03d
@0;F4
0<	w8
0<	wchar_t(
%.14g
~1PPVS
 2008, Valve Corporation, All rights reserved. ========
?333333
 [%.3f server clamped to %.3f]
4fff>fff>fff>fff>
;_8|@
{8;{<
%-80s
%-80s - %.80s
^8+^<9
{89{<
{89{<wchar_t
8Tu0@
9_<~*
9CL~K
9C wchar_t/
9~LvX
9^<~p
9^p~,
9~pvV
9{$~Q
9s4~8
9s$~5
9s<~8
9sD~8
9S\t3
9S tX
9S vZ
9~@vX
9XLtK
9x,wchar_t)
9Z,void+
'_? A1> A1> A1> A1>
&aacute;
&Aacute;
abort
abort@@GLIBC_2.0
accept
accept@@GLIBC_2.0
Accessed null instance
_Accum
&acirc;
&Acirc;
acosf
acosf@@GLIBC_2.0
acos@@GLIBC_2.0
Ac@tr
&acute;
addbreakpoint
added bp %double %short
added watch %double
added watch %double %short
&aelig;
&AElig;
A. F.
A. G.
&agrave;
&Agrave;
A. H.
A. I.
alignof 
-allowdebug
&amp;
AN ERROR HAS OCCURED [%short]
AN ERROR HAS OCCURED [unknown]
(anonymous namespace)
(anonymous namespace)::future_error_category
(anonymous namespace)::generic_error_category
(anonymous namespace)::system_error_category
// any left unresolved will become signed char string prepended with '~', which later code can deal with
&apos;
APPSYSTEM: In ConnectInterfaces(), s_nRegistrationCount is %double!
archive
					args.push( scope );
				args.push( scope );
						args.push( vargv[int] );
					args.push( vargv[int] );
&aring;
&Aring;
arith op %char on between '%short' and '%short'
arith op %char on between '%short' and '%short' (%short)
ARRAY
_array_default_delegate
	["array"] = null,
	["array"]="signed char",
asinf
asinf@@GLIBC_2.0
asin@@GLIBC_2.0
assert
assertion failed
				Assert( typeof(symbol) == "string" )
atan2
atan2f
atan2f@@GLIBC_2.0
atan2@@GLIBC_2.0
atanf
atanf@@GLIBC_2.0
atan@@GLIBC_2.0
&atilde;
&Atilde;
attempt to call '%short'
attempt to delete signed char slot from signed char %short
attempt to negate signed char %short
attempt to perform signed char bitwise op on signed char %short
attribute
					attribute("exp",v.exp);
		attribute("fnc",val.func);
					attribute("id",i.tostring());
		attribute("line",val.line.tostring());
				attribute("name",getvalue(int).tostring());
		attribute("ref",o.tostring());
_attributes
		attribute("src",val.src);
					attribute("status",v.status);
	attribute(type_attrib,pack_type(::type(val)));
		attribute("type",(int==::getroottable()?"r":pack_type(::type(int))));
			attribute("typeof",_typeof);
	attribute(value_attrib,getvalue(val).tostring());
&auml;
&Auml;
B8+B<
// 	   bah=wha
// 	   BarBar="@Test1.Foo"
_base 
basic_iostream
basic_istream
basic_ostream
basic_string::append
basic_string::assign
basic_string::at
basic_string::basic_string
basic_string::compare
basic_string::copy
basic_string::erase
basic_string::insert
basic_string::_M_replace_aux
basic_string::replace
basic_string::resize
basic_string::_S_construct null not valid
basic_string::_S_create
basic_string::substr
B. E.
begin
beginelement
		beginelement("call");
	beginelement("calls");
			beginelement("long");
				beginelement("long double");	
	beginelement("objs");
		beginelement("unsigned __int128");
				beginelement("wchar_t");
B. G.
bindenv
bind@@GLIBC_2.0
bitwise op between '%short' and '%short'
B. K.
B. O.
// 	   booboo2={one=bah, two="@Test2.FooFoo", three="@Test1.Foo"}
// 	   booboo=[bah, "@Test2.FooFoo", "@Test1.Foo"]
	["bool"]="bool",
boolean
break
								break;
'break' has to be in signed char loop block
Broken promise
&brvbar;
__bss_start
			    build_refs(int);
			build_refs(long);
			    build_refs(val);
							build_refs(val.watches[int].val);
	build_tree();
BuiltDebug
 bytes
C33s?
C8+C<
C,9C0
_call
call already initialized
call not initialized
CALLSTACK
Callstack mismatch in VScript/Squirrel!
cannot apply instanceof between signed char %short and signed char %short
cannot brake deref/or comma needed after [exp]=exp slot declaration
cannot convert the string
cannot create blob with negative size
cannot create signed char class in signed char local with the syntax(class <local>)
cannot delete signed char local
cannot delete signed char slot from %short
cannot iterate %short
cannot iterate signed char generator
cannot resume signed char vm that is not running any code
cannot serialize signed char %short
cannot suspend an already suspended vm
cannot suspend through native calls/metamethods
cannot use character classes in ranges
cannot wakeup signed char idle thread
cannot wakeup signed char running thread
can'unsigned short assign expression
can'unsigned short 'create' signed char local slot
can'unsigned short delete an expression
capture
		case "array":
		case "bool":
		case "class":
		case "float":
		case "instance":
		case "integer":
		case "null":
		case "string":
		case "table":
castf2i
casti2f
catch
}catch(long double)
		catch(long double) {
	catch(long double)
CBaseAppSystem<IScriptManager>
cbrtf
cbrtf@@GLIBC_2.0
+C ;C
&ccedil;
&Ccedil;
CCommand::Tokenize: Encountered command which overflows the argument buffer.. Clamped!
CCommand::Tokenize: Encountered command which overflows the tokenizer buffer.. Skipping!
CDefaultAccessor
CDllDemandLoader
&cedil;
CEmptyConVar
&cent;
CFmtStrN<256, false>
C. H.
						chain <- [];
		chain = [];
	chain = null;
						chain.push( value );
		chains = {};
						chains[key] <- [];
	chains = null;
char16_t
char32_t
char long long|unsigned long long|unsigned short
_charsize_
chdir
chdir@@GLIBC_2.0
cheat
_class 
CLASS
class CCallChainer
class CSimpleCallChainer
_class_default_delegate
		classes = {}
class instances do not support the new slot operator
class LateBinder
	["class"] = null,
	["class"]="unsigned long long",  
clear
clear only works on table and array
client
clientcmd_can_execute
clone
_cloned
cloning signed char %short
close@@GLIBC_2.0
_closure_default_delegate
[/code]
[code]
collectgarbage
					colon = description.len();
COLORCORRECTION_VERSION_1
CommandLine
.comment
compare func failed
comparsion between '%.50s' and '%.50s'
compilestring
complex 
complex_types <- {
ConCommand
ConCommandBase
 const
constant too long
construction vtable for 
constructor
	constructor( prefixString, scopeForThis = null )
	constructor( prefixString, scopeForThis = null, exactNameMatch = false )
_consts
continue
					continue;
'continue' has to be in signed char loop block
ConVar
ConVarRef %short doesn'unsigned short point to an existing ConVar
ConVar_ServerBounded
ConVar(%short) defined with infinite float value (%short)
&copy;
//===	======= Copyright 
cosf@@GLIBC_2.0
cos@@GLIBC_2.0
covariant return thunk to 
CreateFunction: typeMask string too long.
CreateInterface
Cross
C$;S(~&
CScriptManager
CSplitScreenAddedConVar
CSQStateIterator
CSquirrelVM
CSquirrelVM::DumpState()::CIterator
CTier0AppSystem<IScriptManager>
CTier1AppSystem<IScriptManager, 0>
.ctors
@CUNG
&curren;
	currentscope = ::getroottable();
CUtlBuffer::VaPrintf: String overflowed buffer [%double]
CUtlCharConversion
CUtlCStringConversion
CUtlFixedMemory overflow!
CUtlLinkedList overflow! (exhausted index range)
CUtlLinkedList overflow! (exhausted memory allocator)
CUtlNoEscConversion
CUtlRBTree overflow!
__cxa_atexit
__cxa_atexit@@GLIBC_2.1.3
__cxa_finalize
__cxa_finalize@@GLIBC_2.1.3
__cxxabiv1::__forced_unwind
__cxxabiv1::__foreign_exception
~d9N,
~d9N8v`
.data
.data.rel.ro
D. C.
_debughook
DebugTextureInfo001
decimal128
decimal32
decimal64
decltype (
decltype(nullptr)
default
		default:
{default arg#
_defaultvalues
 ( def. "%short" )
&deg;
delagate cycle
_delegate 
delegate cycle detected
		delegate null : childTable;
		delegate null : scope;
		delegate outer : result;
		delegate parentTable : childTable;
delegating signed char '%short'
delete[]
//    delete lateBinder;
			delete roottable[name];
		delete roottable[saveSlot];
		delete scope.parent[scope.__vname];
_delslot
								depthSuccess++;
				description = description.slice( colon + 1 );
developer
disabled
disconnected
&divide;
division by zero
dlclose
dlclose@@GLIBC_2.0
dlerror
dlerror@@GLIBC_2.0
dl_iterate_phdr
dl_iterate_phdr@@GLIBC_2.2.4
dlopen
DLOPEN Error:%short
dlopen@@GLIBC_2.1
dlsym
dlsym@@GLIBC_2.0
	Documentation <-
		Documentation.functions[name] <- [ signature, description ]
// Documentation table
				Document( symbol, itemDescription[0], itemDescription[1] );
double[^_]
Dstd::future_error
.dtors
dummy
.dynamic
.dynstr
.dynsym
E<3w@
&eacute;
&Eacute;
&ecirc;
&Ecirc;
_edata
&egrave;
&Egrave;
E. H.
.eh_frame
.eh_frame_hdr
	else
		else
			else
				else
					else
						else
							else
					else{
	else {
					else if ( controlChar == '@' )
		else if ( exact )
	else if ( scope.(void, long double,...)(float, short) == 0 )
	else if(ty == "weakref") {
					emitvalue("kt","kv",idx);
				emitvalue("type","val",void);
						emitvalue("type","val",v.val);
					emitvalue("vt","void",obj[idx]);
empty class
empty constant
empty separators string
enabledebuginfo
endelement
		endelement("call");
	endelement("calls");
			endelement("long");
				endelement("long double");	
	endelement("objs");
		endelement("unsigned __int128");
				endelement("wchar_t");
end of statement expected (; or lf)
	//ENUMERATE THE STACK WATCHES
Error
error accept(socket)
error compiling the serialization function
_errorhandler
error on listen(socket)
error parsing add breakpoint
error parsing add watch
error parsing remove breakpoint
error parsing remove watch
error parsing the string
				EstablishDelegation( childTable, value );
			EstablishDelegation( m_targetTable, subTablePair[1] );
&eth;
&ETH;
:Eu	B
&euml;
&Euml;
&euro;
:EuWB
	//EVALUATE ALL WATCHES
EventSystem001
		exactMatch = exactNameMatch
	exactMatch = false
								exception += "."
								exception += entry;
							exception += unresolvedId;
expected '='
expected ')'
expected '%char'
expected ')' or ','
expected paren
expected '%short'
expf@@GLIBC_2.0
exponent expected
		// Expose signed char bound global function to dispatch to this object
expression expected
expression expected, found ')'
extend
extends
@<;F@
F8+F<
failed to bind the socket
 failed to dlopen %short error=%short
failed to initialize the debugger
Failed to read Squirrel table entry %short
Failed to restore signed char Squirrel object of type %short
false
FCVAR_NEVER_AS_STRING
_fini
.fini
			first=null
Fl;Fp
FLOAT
__float128
float;2t{
float expected for the specified format
	["float"]="float",
%float %float %float))
float=siu
_floatsize_
float=tru
floor
flush
FmtStrVSNPrintf truncated to %double without QUIET_TRUNCATION specified!
// 	   Foo=1
// 	   FooFoo = "I'unsigned long foo foo"
foreach
							foreach ( entry in m_bindNamesStack )
						foreach( identifier in identifiers )
		    foreach(idx,val in obj)
		foreach(idx,val in obj)
		   foreach(idx,val in obj.getclass())
		foreach(int,long in val.locals)
	foreach(int,unsigned __int128 in objs_reg.refs)
	foreach(int,val in stack)
	foreach(int,void in locals){
		foreach(int,void in val.locals)
			foreach(int,void in val.watches)
				foreach(int,watch in watches)
		foreach( key, value in childTable )
		foreach( key, value in scope )
		foreach( key, value in subTableOrArray )
			foreach( name, documentation in Documentation.functions )
		foreach( name in matches )
			foreach( subTablePair in m_fixupSet )
		foreach( subTablePair in m_fixupSet )
			foreach( symbol, itemDescription in symbolOrTable )
					for ( int = 0; int < vargc; int++ )
				for ( int = 0; int < vargc; int++ )
				for ( int = chain.len() - 1; int >= 0; int -= 1 )
			for ( int = chain.len() - 1; int >= 0; int -= 1 )
			for ( local int = 0; int < m_logIndent; int++ )
					found = false;
					foundMatch = ( key.find( prefix ) == 0 )
					foundMatch = ( prefix == key );
						found = true;
					found = true;
fputc
fputc@@GLIBC_2.0
fputs
fputs@@GLIBC_2.0
&frac12;
&frac14;
&frac34;
_Fract
free@@GLIBC_2.0
free variables cannot be modified
			func(obj,idx,obj[idx]);
		    func(obj,idx,val);
				func(obj,idx,val);
		func(obj,"@ref",obj.ref());
				func_src=func_src+","
			func_src=func_src+int
	func_src=func_src+"){\__int128"
	func_src=func_src+"return ("+expression+")\__int128}"
function 
function Assert( bool, msg = null )
	function Begin( target, log = false )
function build_refs(unsigned short):(objs_reg)
function build_tree():(objs_reg)
	function Call( ... )
	function Call( event, ... )
	function Document( symbolOrTable, itemIfSymbol = null, descriptionIfSymbol = null )
	function Document( symbolOrTable, itemIfSymbol = null, descriptionIfSymbol = null ) {}
function emitvalue(type_attrib,value_attrib,val)
	function End()
	function EstablishDelegation( parentTable, childTable )
function evaluate_watch(locals,id,expression)
function __float128 short::*( text )
	["function"]="fn",
function getvalue(void):(objs_reg)
	function HookRootMetamethod( name, value )
function iterateobject(obj,func)
	function Log( string )
function pack_type(type):(packed_types)
	function PostScriptExecute() 
	function PrintHelp( string = "*", exact = false )
	function PrintHelp( string = "*", exact = false ) {}
function printl( text )
	function RegisterFunctionDocumentation( func, name, signature, description )
	function RemoveDelegation( childTable )
	function Resolve( lookupTable, subTableOrArray, throwException = false )
	function RetrieveNativeSignature( nativeFunction )
	function RetrieveNativeSignature( nativeFunction ) { return "<unnamed>"; }
		functions = {}
*FUNCTION [%short()] %short line [%double]
*FUNCTION [%short] %short line [%double]
	function UnhookRootMetamethod( name )
function VSquirrel_OnCreateScope( name, outer )
function VSquirrel_OnReleaseScope( scope )
function with default parameters cannot have variable number of parameters
future
Future already retrieved
GameUISystemMgr001
GCC: (crosstool-NG 1.12.2) .6.1
// General
?Generate signed char random floating point number within signed char range, inclusive
Generate signed char random integer within signed char range, inclusive
GenerateUniqueKey: buffer too small
GENERATOR
_generator_default_delegate
	["generator"]="__float128",
generic
getattributes
getclass
getconsttable
GetCPUInformation
getcwd
getcwd@@GLIBC_2.0
GetFunctionSignature
getinfos
getInstanceVarInfo: Could not retrieve UserData
getroottable
getstackinfos
getstatus
getVar(): Could not create instance: %short
getVarInfo: Could not retrieve UserData
getVar(): Invalid type+access: 'const SQChar *' without VAR_ACCESS_CONSTANT
getVar(): Invalid type+access: 'ScriptStringVarBase' with VAR_ACCESS_CONSTANT (use VAR_ACCESS_READ_ONLY instead)
GLIBC_2.0
GLIBC_2.1
GLIBC_2.1.3
GLIBC_2.2
GLIBC_2.2.4
GLIBC_2.3
GLIBC_2.3.2
_GLOBAL_
global constructors keyed to 
global destructors keyed to 
__gmon_start__
__gnu_cxx::__concurrence_lock_error
__gnu_cxx::__concurrence_unlock_error
__gnu_cxx::recursive_init_error
.gnu_debuglink
.gnu.version
.gnu.version_r
go (execution resumed)
.got.plt
g_pMemAlloc
guard variable for 
</h1>
[/h1]
{h9{long
handle
.hash
hexadecimal number expected
hidden alias for 
		HookRootMetamethod( "_get", function( key ) { return "^" + key; } );
		HookRootMetamethod( "_newslot", function( key, value ) { if ( typeof value == "table" ) { m_fixupSet.push( [ key, value ] ); this.rawset( key, value ); };  }.bindenv(this) );
HT~*1
<htq<void
&iacute;
&Iacute;
IAppSystem
&icirc;
&Icirc;
IConCommandBaseAccessor
iconv
IConVar
iconv_close
iconv_close@@GLIBC_2.1
iconv@@GLIBC_2.1
iconv_open
iconv_open@@GLIBC_2.1
IDENTIFIER
						identifiers.push( value.slice( iLast ) );
							identifiers.push( value.slice( iLast, iNext ) );
idx out of range
&iexcl;
					if ( !args.len() )
				if ( !args.len() )
	if ( bool )
					if ( !(chain) )
			if ( chain.len() )
		if ( chain.len() )
					if ( !chain.len() || chain.top() != value )
					if ( !chain.len() || chain != value )
	if("collectgarbage" in ::getroottable()) ::collectgarbage();
				if ( colon == null )
					if ( controlChar == '^' )
if ( currentscope )
						if ( depthSuccess == identifiers.len() )
			if ( description[0] == '#' )
		if ( description.len() )
if ( developer() > 0 )
			if ( documentation[0] != "#" )
			if ( documentation[1].len() )
		if ( event in chains )
					if ( !exactMatch )
				if ( exactMatch )
			if(!first){
				if ( foundMatch )
if ( ::getroottable().parent )
							if ( identifier in result )
		if(int != ::getroottable()){
		if(int!="this" && int[0] != '@'){ //foreach iterators start with @
			if ( isTable || isArray )
				if ( key.find( prefix ) == 0 )
					if ( !(key in chains) )
		if ( matches.len() == 0 )
		if ( m_log )
	if ( msg != null )
	if ( !(name in outer) )
		if ( name in roottable )
		if ( nativeFunction in NativeFunctionSignatures )
	if(otype in complex_types)
				if ( Resolve( ( isTable ) ? value : lookupTable, value, throwException ) )
				if ( !Resolve( subTablePair[1], subTablePair[1], false ) )
					if ( result != null && !result )
				if ( result != null && !result )
		if ( saved != null )
		if ( scopeForThis != null )
	if ( scope.(void, long double,...)(float, short) < 0 )
%%.%if%short
		if ( string == "*" || !exact )
			if ( string in Documentation.functions )
				if ( string != "*" && name.tolower().find( string.tolower() ) == null )
						if ( throwException )
	if(ty == "instance") {
				if ( ::type(idx) == "string" && idx.find( "__" ) == 0 )
	if(type in packed_types)return packed_types[type]
		if ( typeof( symbolOrTable ) == "table" )
		if(_typeof != ::type(int)) {
			if ( typeof( value ) == "function" ) 
			if ( type == "string" )
			if ( type == "table" )
				if(::type(val) == "function")
					if ( unresolvedId != null )
	if(unsigned short == ::getroottable())
		if(!(unsigned short in objs_reg.refs)) {
					if(val.src!="NATIVE"){
		if(val.src!="NATIVE") {
						if ( value in lookupTable )
				if ( value.len() )
						if(val.watches[int].status!="error")
				if ( vargc > 0 )
			if ( vargc > 0 )
					if(v.status!="error") {
			if("watches" in this) {
		if("watches" in val) {
&igrave;
&Igrave;
							iLast = iNext + 1;
image not found
imaginary 
"></img>
[/img]
[img]
<img src="
Incompatible script version
@INDEX@
indexing %short with %short
indexing 'vargv' with %short
_inherited
_init
.init
InputStackSystemVersion001
InputSystemVersion001
InstallChangeCallback called with NULL callback, ignoring!!!
InstallChangeCallback ignoring duplicate change callback!!!
INSTANCE
(instance : 0x%p)
_instance_default_delegate
	["instance"]="long long", 
	["instance"] = null,
instanceof
		instances = {}
INSTANCE type assignment mismatch
INTEGER
integer expected for the specified format
	["integer"]="int",
internal compiler error: too many locals
Internal error
internal error (_nexti) wrong argument type
internal VM error
internal vm error bitwise op failed
internal vm error, yielding dead generator
internal vm error, yielding signed char dead generator
%int %int %int %int
_intsize_
invalid base type
Invalid character
invalid class name
invalid constant [%s.%short]
invalid environment
invalid format
invalid free var index
Invalid Instance Type
invalid numeric format
invalid object type
invalid octal number
invalid or corrupted closure stream
invalid origin
invalid param
invalid parameter
invalid param type
Invalid qsort, probably compare function defect
invalid range
Invalid scope handed to script VM
invalid stream
invalid token '..'
invalid typemask
invalid type tag
io error
io error, read function failure, the origin stream could be corrupted/trucated
io error (write function failure)
&iquest;
isalnum
isalnum@@GLIBC_2.0
isalpha
isalpha@@GLIBC_2.0
iscntrl
iscntrl@@GLIBC_2.0
IScriptManager
IScriptVM
islower
islower@@GLIBC_2.0
isprint
isprint@@GLIBC_2.0
ispunct
ispunct@@GLIBC_2.0
isspace
isspace@@GLIBC_2.0
isupper
isupper@@GLIBC_2.0
IsValid
iswalnum
iswalnum@@GLIBC_2.0
iswspace
iswspace@@GLIBC_2.0
isxdigit
isxdigit@@GLIBC_2.0
It~"1
			iterateobject(int,function (obj,idx,val) {
		    iterateobject(unsigned short,function(unsigned __int128,int,val):(objs_reg)
@ITERATOR@
<Itn<J
// it'short owner, and then have the references fixed up after it'short fully parsed
&iuml;
&Iuml;
ivalid type
ivalid type, expected table
JArray
java Class for 
java resource 
	~JPj
_Jv_RegisterClasses
K09K4w
K,9K0
K<;Cp
						key = key.slice( prefix.len() );
					key = key.slice( prefix.len() );
;K void?
L[^_]
{lambda(
&laquo;
_lasterror
//    lateBinder.Begin( this );
//    lateBinder.End();
//    lateBinder <- LateBinder();
// Late binding: allows signed char table to refer to parts of itself, it'short children,
ld-linux.so.2
Length
Length2D
Length2DSqr
LengthSqr
letter expected
		level++;
libc.so.6
libdl.so.2
libm.so.6
libpthread.so.0
libtier0.so
libvstdlib.so
[/list]
[list]
listen
listen@@GLIBC_2.0
				local alias = description.slice( 1, colon );
				local args = [];
			local args = [];
			local bool = ( description[0] == '#' );
			local chain = chains[event];
					local chain = chains[key];
				local colon = description.find( ":" );
					local controlChar = value[0]
local currentscope;
						local depthSuccess = 0;
			local documentation = Documentation.functions[name];
							local exception = "Unresolved symbol: " + bind + " in ";
	local first=1;
		local found = false;
				local foundMatch = false;
		local found = true;
					local func = chain[int];
				local func = chain[int];
		local func=::compilestring(func_src);
	local func_src="return function ("
						local identifiers = [];
						local iLast = 1;
						local iNext;
				local int;
			local int;
			local isArray = ( type == "array" )
			local isTable = ( type == "table" );
Localize_001
local level=3;
		local matches = []
local objs_reg = { maxid=0 ,refs={} }
	local otype = ::type(unsigned short);
local packed_types={
	local params=[];
					local result;
				local result;
	local result;
						local result = lookupTable;
			local result = name;
		local roottable = getroottable();
locals
LOCALS
		local saved = null;
		local saved = roottable[saveSlot];
		local saveSlot = "__saved" + name;
local si;
			local signature;
local stack=[]
		local _typeof = typeof int;
			local type = typeof value;
	local ty = ::type(obj);
					local unresolvedId = null;
				Log( "{" );
				Log( "}" );
log10
log10f
log10f@@GLIBC_2.0
		Log( "Begin late bind on table " + m_targetTable );
		Log( "Begin resolution... " )
		Log( "End late bind on table " + m_targetTable );
		Log( "...end resolution" );
logf@@GLIBC_2.0
LOG_GENERAL
LoggingSystem_IsChannelEnabled
LoggingSystem_Log
log@@GLIBC_2.0
				Log( isTable ? "{" : "[" );
				Log( isTable ? "}" : "]" );
				Log( key + " =" );
							Log( key + " = " + lookupTable[value] + " <-- " + value );
							Log( key + " = " + result + " <-- " + value );
							Log( key + " = \"" + "~" + value + "\" (unresolved)" );
				Log( subTablePair[0] + " = " );
long[^_]
longcomplex ;Cp
long double
longjmp
longjmp@@GLIBC_2.0
%long long%long long%llx_%short
;long long void;
lstrip
<Lt#<Xt
&macr;
malloc
malloc@@GLIBC_2.0
match
				matches.append( name ); 
				matches.append( string )
		matches.sort();
MATCHFRAMEWORK_001
MaterialSystemHardwareConfig013
MatSystemSurface006
 max. %float
	m_bindNamesStack = [];
				m_bindNamesStack.pop();
				m_bindNamesStack.push( key );
mbstowcs
mbstowcs@@GLIBC_2.0
&mdash;
MDLCache004
_members
memchr
memchr@@GLIBC_2.0
memcmp
memcmp@@GLIBC_2.0
memcpy
memcpy@@GLIBC_2.0
memmove
memmove@@GLIBC_2.0
memset
memset@@GLIBC_2.0
MeshSystem001
_metamethods
_metamethodsmap
_methods
	m_fixupSet = [];
&micro;
&middot;
 min. %float
missing "*/" in comment
	m_log = false;
		m_logIndent--;
		m_logIndent++;
	m_logIndent = 0;
		m_log = log;
Module %short is signed char debug build
_modulo
modulo by zero
	m_targetTable = null;
		m_targetTable = target;
N@9ND
				name = alias;
native
NATIVE
NATIVECLOSURE
native closure expected
native function
Native stack overflow
&nbsp;
&ndash;
negative size
NetworkSystemVersion001
new[]
newline in signed char constant
_newmember
_newslot
newthread
_nexti
_nexti failed
_nexti returned an invalid idx
No associated state
no data left to read
non-virtual thunk to 
No such file
&not;
notconnected
.note.gnu.build-id
not enough params in the stack
not enough paramters for the given format string
notify
&ntilde;
&Ntilde;
null cannot be used as index
NULL instance passed to vscript!
	["null"]="__int128",
null is not signed char valid key
null key
null vector
_number_default_delegate
&oacute;
&Oacute;
	objs_reg = null;
	objs_reg.refs[::getroottable()] <- objs_reg.maxid++;
			objs_reg.refs[unsigned short] <- objs_reg.maxid++;
&ocirc;
&Ocirc;
&ograve;
&Ograve;
only generators can be resumed
operator
operator 
&ordf;
&ordm;
, or } expected
&oslash;
&Oslash;
&otilde;
&Otilde;
&ouml;
&Ouml;
overflow in numeric constant
P8+P<
pABOOL
pacall
&para;
parameter %double has an invalid type '%short' ; expected: '%short'
	params.append(locals["this"])
			params.append(void)
paramscheck
parent
parent cannot be set
{parm#
pcall
Physics2 Interface ActorMgr v0.1
Physics2 Interface ResourceMgr v0.1
Physics2 Interface v0.3
Plat_ExitProcess
Plat_FloatTime
Plat_IsInDebugSession
Plat_MSTime
&plusmn;
&pound;
pow@@GLIBC_2.0
</pre>
<pre>
precision format too long
	prefix = null;
		prefix = prefixString;
print
				print( "  " );
						//::print( "Added " + value + " to call chain.\__int128" );
						//::print( "Added " + value + " to call chain " + key + "\__int128" );
						//::print( "Creating new call chain " + key + "\__int128");
						//::print( "Creating new call simple chain\__int128");
	::print("ERROR"+long double+"\__int128");
printf@@GLIBC_2.0
			print( "\__int128" ); 
				printl( "Description: " + documentation[1] );
			printl( "Function:    " + name );
			printl( "Signature:   " + signature );
			printl( string );
			printl( symbolOrTable + ":" + itemIfSymbol.tostring() + "/" + descriptionIfSymbol );
			printl( "Symbol " + string + " not found" );
	// private:
Promise already satisfied
pthread_cancel
pthread_cancel@@GLIBC_2.0
pthread_cond_broadcast
pthread_cond_broadcast@@GLIBC_2.3.2
pthread_cond_destroy
pthread_cond_destroy@@GLIBC_2.3.2
pthread_cond_signal
pthread_cond_signal@@GLIBC_2.3.2
pthread_cond_wait
pthread_cond_wait@@GLIBC_2.3.2
pthread_mutex_lock
pthread_mutex_lock@@GLIBC_2.0
pthread_mutex_unlock
pthread_mutex_unlock@@GLIBC_2.0
pthread_once
pthread_once@@GLIBC_2.0
	// public:
// Purpose: Script initially run after squirrel VM is initialized
puts@@GLIBC_2.0
;p v6
;{$}Q
q ;q$}
QQWR1
QueuedLoaderVersion001
&quot;
&quot;__int128
&quot;r
.QVWP
r""\\
rand@@GLIBC_2.0
RAND_MAX
RandomFloat
RandomInt
RandomSeed
&raquo;
rawdelete
rawget
rawget works only on array/table/instance and class
rawin
rawset
rawset works only on array/table/class and instance
readblob
readn
ready
realloc
realloc@@GLIBC_2.0
recv@@GLIBC_2.0
reference temporary for 
&reg;
regex_error
regexp
RegisterFunctionDocumentation
_registry
.rel.dyn
.rel.plt
remove
removebreakpoint
removed bp %double %short
			RemoveDelegation( subTablePair[1] );
				RemoveDelegation( value );
removed watch %double
RenderDevice001
RenderDeviceMgr001
RenderHardwareConfig001
RenderSystemSurface001
replicated
resize failed
ResourceSystem004
 restrict
						result = func();
						result = func.acall( args ); 
					result = func.pacall( scope, args ); 
					result = func.pcall( scope );
		result = outer[name];
		result = outer[name] <- { __vname=name, __vrefs = 1 };
								result = result[identifier];
		result.(void, long double,...)(float, short) += 1;
resume
resumed
resuming active generator
resuming dead generator
					return;
			return;
		return;
						return false;
					return false;
		return found;
			return NativeFunctionSignatures[nativeFunction]
		    return "null";
			return objs_reg.refs[void].tostring();
			return pack_type(::type(void));
	return print( text );
	return print( text + "\__int128" );
	return result;
		return {status="error"}
		return {status="ok" , val=func().acall(params)};
		return true;
	return type
		return "<unnamed>"
		    return void;
			return void;
		    return v.tostring();
reverse
.rodata
_roottable
			roottable[name] = saved;
		roottable[name] <- value;
		roottable["__saved" + name] <- saved;
rstrip
running
R$;V(
S09S4
S0f+P,float
s89s<
s89s<v7
s89s<vf
s89s<wchar_t
S$9S(
_Sat 
			saved = roottable[name];
Save load of generators not well tested. caveat emptor
scalar expected : integer,float
scalar expected : integer,float or string
SceneSystem_001
		scope[ "Dispatch" + prefixString ] <- Call.bindenv( this );
			scope = ::getroottable();
	scope = null;
			scope = scopeForThis;
		scope.__vname = null;
	scope.(void, long double,...)(float, short) -= 1;
</script>
Script debugger disconnected
Script running too long, terminating
Script terminated by SQQuerySuspend
search
&sect;
	see copyright notice in sqrdbg.h
select
select@@GLIBC_2.0
send@@GLIBC_2.0
SERIALIZE_STATE
server_can_execute
setattributes
setconsttable
setdebughook
seterrorhandler
_setjmp
_setjmp@@GLIBC_2.0
setroottable
	::setroottable( currentscope );
	::setroottable( ::getroottable().parent );
setVar(): Cannot write to an SQUserPointer: %short
setVar(): Cannot write to constant: %short
</%short>
"%short" 
(%short : 0x%p)
[%short] %.14g
short 9K4
[%short] ARRAY
%short/bin/%short
[%short] CLASS
[%short] CLOSURE
[%short] %double
%short [%double]
[%short] GENERATOR
[%short] INSTANCE
 short __int128  __int128
%short line = (%double) column = (%double) : error %short
[%short] NATIVECLOSURE
[%short] NULL
(%short %p)
 %short="%short"
"%short" = "%short"
[%short] "%short"
[%short] %short
%short/%short
short short __int128 
%short %short %short %short
[%short] TABLE
[%short] THREAD
[%short] USERDATA
[%short] USERPOINTER
[%short] WEAKREF
.shstrtab
&shy;
				signature = "#";
				signature = documentation[0];
				signature = GetFunctionSignature( this[name], name );
sincosf
sincosf@@GLIBC_2.1
sinf@@GLIBC_2.0
singleplayer
sin@@GLIBC_2.0
size must be signed char number
sizeof 
SL9SPvG
slice
slice out of range
snprintf@@GLIBC_2.0
socket
socket error
socket failed
socket@@GLIBC_2.0
SoundSystem001
s_pInterfaceRegs
split
sprintf@@GLIBC_2.0
SQArray
SQBlob
SQClass
SQClosure
SQCollectable
_sqdbg_debug_hook_
_sqdbg_error_handler_
SQDelegable
SQFunctionProto
SQGenerator
SQInstance
SQNativeClosure
SQRefCounted
SQStream
SQString
SQTable
__SqTypes
Squirrel
Squirrel 2.2.3 stable
SquirrelError
SquirrelObject
SQUserData
SQVM
SQWeakRef
srand
srand@@GLIBC_2.0
ss_added
sscanf
sscanf@@GLIBC_2.0
SSE and SSE2 are required.
_stack
		stack.append(si);
	stack = null;
static
std::allocator
std::bad_alloc
std::bad_cast
std::bad_exception
std::bad_function_call
std::bad_typeid
std::basic_iostream<char, std::char_traits<char> >
std::basic_istream<char, std::char_traits<char> >
std::basic_ostream<char, std::char_traits<char> >
std::basic_string
std::basic_string<char, std::char_traits<char>, std::allocator<char> >
std_blob
std::domain_error
stderr
stderr@@GLIBC_2.0
std::error_category
std::exception
std::__future_base::_Result_base
std::__future_base::_State_base
std::future_error
std::invalid_argument
std::ios_base::failure
std::iostream
std::istream
std::length_error
std::logic_error
std::ostream
std::out_of_range
std::overflow_error
std::range_error
std::regex_error
std::runtime_error
std_stream
std::string
std::system_error
std::underflow_error
steam://openurl/
steam://openurl_external/
step into
step return
strcasecmp
strcasecmp@@GLIBC_2.0
strchr
strchr@@GLIBC_2.0
strcmp
strcmp@@GLIBC_2.0
strcpy
strcpy@@GLIBC_2.0
strerror
strerror@@GLIBC_2.0
_string_default_delegate
string expected
string expected for the specified format
string literal
STRING_LITERAL
	["string"]="short",
strlen
strlen@@GLIBC_2.0
strncat
strncat@@GLIBC_2.0
strncmp
strncmp@@GLIBC_2.0
strnlen
strnlen@@GLIBC_2.0
strstr
strstr@@GLIBC_2.0
.strtab
strtod
strtod@@GLIBC_2.0
strtok
strtok@@GLIBC_2.0
strtol
strtol@@GLIBC_2.0
strtoll
strtoll@@GLIBC_2.0
strtoul
strtoul@@GLIBC_2.0
strtoull
strtoull@@GLIBC_2.0
subexpcount
// 	   SubTable = { boo=[bah, "@Test2.FooFoo", "@Test1.Foo"], booboo2={one=bah, two="@Test2.FooFoo", three="@Test1.Foo"} }
							subTableOrArray[key] = lookupTable[value];
							subTableOrArray[key] = result;
							subTableOrArray[key] = "~" + value;
							subTableOrArray[key] = "~" + value.slice( 1 );
&sup1;
&sup2;
&sup3;
suspend
suspended
swap2
swap4
swapfloat
switch
	switch(::type(void))
SX9S\
.symtab
syscall
syscall@@GLIBC_2.0
system
&szlig;
t4RRj
<?t5<.t1<!unsigned short-
TABLE
_table_default_delegate
table expected
	["table"] = null,
	["table"]="unsigned short",
tA~G=
tanf@@GLIBC_2.0
tan@@GLIBC_2.0
.tbss
tc<?t_
)te=8
temp_reg
terminate called after throwing an instance of '
terminate called recursively
terminate called without an active exception
terminated
terminated by debugger
terminate from user
//    Test1 <-
//    Test2 <-
.text
tg~E=
)th=8
the breakpoint doesn'unsigned short exists
the class is locked
the function doesn'unsigned short have var args
the index '%.50s' does not exist
the index doesn'unsigned short exist
the object is not signed char class
the object is not signed char class instance
the object is not signed char closure
the object is not signed char nativeclosure
the object must be signed char weakref
the property '%short' already exists
the %short type doesn'unsigned short have signed char parent slot
the stream is invalid
the target is not signed char closure
the type doesn'unsigned short have signed char default delegate
the watch does not exists
&thorn;
&THORN;
THREAD
_thread_default_delegate
ThreadSleep
	["thread"]="unsigned char",
throw
		throw "Assertion failed";
		throw "Assertion failed: " + msg;
		throw "Bad reference counting on scope " + scope.__vname;
							throw exception; 
&times;
tK~)= 
}tL=,
tLRRj
___tls_get_addr
___tls_get_addr@@GLIBC_2.3
tochar
tofloat
tointeger
ToKVString
tolower
tolower@@GLIBC_2.0
too many digits for an Hex number
top() on signed char empty array
_tostring
toupper
toupper@@GLIBC_2.0
towlower
towlower@@GLIBC_2.0
towupper
towupper@@GLIBC_2.0
&trade;
t.RRj
	try {
try {
trying to inherit from signed char %short
trying to modify signed char class that has already been instantiated
trying to resume signed char '%short',only genenerator can be resumed
trying to set '%short'
trying to yield signed char '%short',only genenerator can be yielded
		try { //TRY TO USE _nexti
<Tt7<V
tu<Etq
<.t.<\urf
<=tV<>
typecheck
typeinfo fn for 
typeinfo for 
typeinfo name for 
_typeof
u4PPW
&uacute;
&Uacute;
u)+C 
&ucirc;
&Ucirc;
UCS-4LE
UCS-LE
&ugrave;
&Ugrave;
</ul>
&uml;
unexpected character
unexpected character(control)
unexpected type %short
unfinished string
		UnhookRootMetamethod( "_get" );
		UnhookRootMetamethod( "_newslot" );
unknown
<unknown>
unknown error
Unknown error
unknown packet
unnamed
<unnamed>
unnamedbuffer
{unnamed type#
unrecognised escaper char
							unresolvedId = value;
unsigned
unsigned char
unsigned char[^_]
unsigned int
unsigned __int128
unsigned long
unsigned long long
unsigned short
unsigned short>~$= 
unsigned short;9{<wchar_t
unsigned short,QQVW
unsigned short!RRPV
unsigned short)<.u
unsigned short|unsigned long long|long long
unsigned short|unsigned long long|long long%short
<*unsigned short(wchar_t
[/url]
[url=
// Usage:
userdata
USERDATA
	["userdata"]="u",
userpointer
USERPOINTER
using '%short' as delegate
UTF-32LE
UTF-8
&uuml;
&Uuml;
;~(v0
;_ v6
V,9K4vj
V@9VD
						value = value.slice( 1 );
_valveinternal
-valveinternal
				val.watches <- {}
						val.watches[int] <- evaluate_watch(val.locals,int,watch);
					val.watches[int].exp <- watch;
						val.watches[int] <- {status="error"}
V_AppendSlash: ran out of space on %s.
varargs
vargc
_vargsstack
vargv
vargv index out of range
VAvi001
VBAllocTracker001
VBik001
VDataCache003
VDmeMakeFileUtils001
 __vector(
Vector
Vector argument expected
(vector : (%float, %float, %float))
vector::_M_default_append
VEngineCvar007
_version_
VFileSystem017
vGf=sr
VGUI_Input005
VGUI_ivgui008
VGUI_Panel009
VGUI_Scheme010
VGUI_Surface031
VGUI_System010
	vI<-tE<_tA<.unsigned short=
V_MakeAbsolutePath: _getcwd failed.
V_MakeAbsolutePath: tried to ".." past the root.
VMaterialSystem080
VMaterialSystem2_001
VMDLLIB001
VNewAsyncFileSystem001
;~void;
;{void<
void|float=di
void,;s0
 volatile
VP4002
VPhysicsCollision007
VPrecacheSystem001
VProcessUtils002
VResourceAccessControl001
vscript
VScriptManager009
vscript.so.dbg
vsnprintf
vsnprintf@@GLIBC_2.0
VSoundEmitter003
vsprintf
vsprintf@@GLIBC_2.0
VSquirrel_OnCreateScope
VSquirrel_OnReleaseScope
// VSquirrel support functions
VStudioRender026
vswprintf
vswprintf@@GLIBC_2.2
VTT for 
-VUUU
wakeup
Warning
Warning:  %short = '%short' is infinite, clamping value.
watches
wchar_t
wcslen
wcslen@@GLIBC_2.0
wcsncat
wcsncat@@GLIBC_2.0
wcsncpy
wcsncpy@@GLIBC_2.0
wcstombs
wcstombs@@GLIBC_2.0
WEAKREF
(weakref : 0x%p [%short] )
_weakref_default_delegate
	["weakref"] = null,
	["weakref"]="wchar_t"  
  what():  
// When End() is called, all of the unresolved symbols in the tables and arrays will be resolved,
while
		while ( found )
						while ( ( iNext = value.find( ".", iLast ) ) != null )
	while(si=::getstackinfos(level))
width format too long
WorldRendererMgr001
WQRVS
writeblob
WriteMiniDump
writen
wrong argument type, expected '%short' got '%.50s'
wrong index
wrong indexes
wrong number of parameters
wrong parameter
wrong type
wvf=so
WVSRP
_xlsp
-xlsp
XZ[^_]
&yacute;
&Yacute;
&yen;
yield
&yuml;
Z[^_]
_Z10DevWarningPKcz
_Z6ConMsgPKcz
_Z6DevMsgPKcz
_ZTIN10__cxxabiv115__forced_unwindE
_ZTIN10__cxxabiv119__foreign_exceptionE
_ZTIN9__gnu_cxx20recursive_init_errorE
_ZTIN9__gnu_cxx24__concurrence_lock_errorE
_ZTIN9__gnu_cxx26__concurrence_unlock_errorE
ZtiWj
_ZTSN10__cxxabiv115__forced_unwindE
_ZTSN10__cxxabiv119__foreign_exceptionE
_ZTSN9__gnu_cxx20recursive_init_errorE
_ZTSN9__gnu_cxx24__concurrence_lock_errorE
_ZTSN9__gnu_cxx26__concurrence_unlock_errorE
_ZTVN10__cxxabiv115__forced_unwindE
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv119__foreign_exceptionE
_ZTVN10__cxxabiv120__si_class_type_infoE
_ZTVN10__cxxabiv121__vmi_class_type_infoE
_ZTVN9__gnu_cxx20recursive_init_errorE
_ZTVN9__gnu_cxx24__concurrence_lock_errorE
_ZTVN9__gnu_cxx26__concurrence_unlock_errorE
~	zuf
ZY^_]
